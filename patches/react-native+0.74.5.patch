diff --git a/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js b/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
index 206b826..c605dee 100644
--- a/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
+++ b/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
@@ -1,116 +1,93 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict-local
- */
-
-import typeof BatchedBridge from '../BatchedBridge/BatchedBridge';
-import typeof legacySendAccessibilityEvent from '../Components/AccessibilityInfo/legacySendAccessibilityEvent';
-import typeof TextInputState from '../Components/TextInput/TextInputState';
-import typeof ExceptionsManager from '../Core/ExceptionsManager';
-import typeof RawEventEmitter from '../Core/RawEventEmitter';
-import typeof ReactFiberErrorDialog from '../Core/ReactFiberErrorDialog';
-import typeof RCTEventEmitter from '../EventEmitter/RCTEventEmitter';
-import typeof CustomEvent from '../Events/CustomEvent';
-import typeof {
+// Converted for TypeScript compatibility
+import BatchedBridge from '../BatchedBridge/BatchedBridge';
+import legacySendAccessibilityEvent from '../Components/AccessibilityInfo/legacySendAccessibilityEvent';
+import TextInputState from '../Components/TextInput/TextInputState';
+import ExceptionsManager from '../Core/ExceptionsManager';
+import RawEventEmitter from '../Core/RawEventEmitter';
+import ReactFiberErrorDialog from '../Core/ReactFiberErrorDialog';
+import RCTEventEmitter from '../EventEmitter/RCTEventEmitter';
+import CustomEvent from '../Events/CustomEvent';
+import {
   createPublicInstance,
   createPublicTextInstance,
   getInternalInstanceHandleFromPublicInstance,
   getNativeTagFromPublicInstance,
   getNodeFromPublicInstance,
 } from '../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance';
-import typeof {
+import {
   create as createAttributePayload,
   diff as diffAttributePayloads,
 } from '../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';
-import typeof UIManager from '../ReactNative/UIManager';
-import typeof * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';
-import typeof flattenStyle from '../StyleSheet/flattenStyle';
-import type {DangerouslyImpreciseStyleProp} from '../StyleSheet/StyleSheet';
-import typeof deepFreezeAndThrowOnMutationInDev from '../Utilities/deepFreezeAndThrowOnMutationInDev';
-import typeof deepDiffer from '../Utilities/differ/deepDiffer';
-import typeof Platform from '../Utilities/Platform';
+import UIManager from '../ReactNative/UIManager';
+import * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';
+import flattenStyle from '../StyleSheet/flattenStyle';
+import { DangerouslyImpreciseStyleProp } from '../StyleSheet/StyleSheet';
+import deepFreezeAndThrowOnMutationInDev from '../Utilities/deepFreezeAndThrowOnMutationInDev';
+import deepDiffer from '../Utilities/differ/deepDiffer';
+import Platform from '../Utilities/Platform';
 
-// flowlint unsafe-getters-setters:off
-module.exports = {
-  get BatchedBridge(): BatchedBridge {
-    return require('../BatchedBridge/BatchedBridge');
+export default {
+  get BatchedBridge() {
+    return BatchedBridge;
   },
-  get ExceptionsManager(): ExceptionsManager {
-    return require('../Core/ExceptionsManager');
+  get ExceptionsManager() {
+    return ExceptionsManager;
   },
-  get Platform(): Platform {
-    return require('../Utilities/Platform');
+  get Platform() {
+    return Platform;
   },
-  get RCTEventEmitter(): RCTEventEmitter {
-    return require('../EventEmitter/RCTEventEmitter');
+  get RCTEventEmitter() {
+    return RCTEventEmitter;
   },
-  get ReactNativeViewConfigRegistry(): ReactNativeViewConfigRegistry {
-    return require('../Renderer/shims/ReactNativeViewConfigRegistry');
+  get ReactNativeViewConfigRegistry() {
+    return ReactNativeViewConfigRegistry;
   },
-  get TextInputState(): TextInputState {
-    return require('../Components/TextInput/TextInputState');
+  get TextInputState() {
+    return TextInputState;
   },
-  get UIManager(): UIManager {
-    return require('../ReactNative/UIManager');
+  get UIManager() {
+    return UIManager;
   },
-  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`
-  get deepDiffer(): deepDiffer {
-    return require('../Utilities/differ/deepDiffer');
+  get deepDiffer() {
+    return deepDiffer;
   },
-  get deepFreezeAndThrowOnMutationInDev(): deepFreezeAndThrowOnMutationInDev<
-    {...} | Array<mixed>,
-  > {
-    return require('../Utilities/deepFreezeAndThrowOnMutationInDev');
+  get deepFreezeAndThrowOnMutationInDev() {
+    return deepFreezeAndThrowOnMutationInDev;
   },
-  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`
-  get flattenStyle(): flattenStyle<DangerouslyImpreciseStyleProp> {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
-    // $FlowFixMe[incompatible-return]
-    return require('../StyleSheet/flattenStyle');
+  get flattenStyle() {
+    return flattenStyle;
   },
-  get ReactFiberErrorDialog(): ReactFiberErrorDialog {
-    return require('../Core/ReactFiberErrorDialog').default;
+  get ReactFiberErrorDialog() {
+    return ReactFiberErrorDialog;
   },
-  get legacySendAccessibilityEvent(): legacySendAccessibilityEvent {
-    return require('../Components/AccessibilityInfo/legacySendAccessibilityEvent');
+  get legacySendAccessibilityEvent() {
+    return legacySendAccessibilityEvent;
   },
-  get RawEventEmitter(): RawEventEmitter {
-    return require('../Core/RawEventEmitter').default;
+  get RawEventEmitter() {
+    return RawEventEmitter;
   },
-  get CustomEvent(): CustomEvent {
-    return require('../Events/CustomEvent').default;
+  get CustomEvent() {
+    return CustomEvent;
   },
-  get createAttributePayload(): createAttributePayload {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')
-      .create;
+  get createAttributePayload() {
+    return createAttributePayload;
   },
-  get diffAttributePayloads(): diffAttributePayloads {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')
-      .diff;
+  get diffAttributePayloads() {
+    return diffAttributePayloads;
   },
-  get createPublicInstance(): createPublicInstance {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')
-      .createPublicInstance;
+  get createPublicInstance() {
+    return createPublicInstance;
   },
-  get createPublicTextInstance(): createPublicTextInstance {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')
-      .createPublicTextInstance;
+  get createPublicTextInstance() {
+    return createPublicTextInstance;
   },
-  get getNativeTagFromPublicInstance(): getNativeTagFromPublicInstance {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')
-      .getNativeTagFromPublicInstance;
+  get getNativeTagFromPublicInstance() {
+    return getNativeTagFromPublicInstance;
   },
-  get getNodeFromPublicInstance(): getNodeFromPublicInstance {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')
-      .getNodeFromPublicInstance;
+  get getNodeFromPublicInstance() {
+    return getNodeFromPublicInstance;
   },
-  get getInternalInstanceHandleFromPublicInstance(): getInternalInstanceHandleFromPublicInstance {
-    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')
-      .getInternalInstanceHandleFromPublicInstance;
+  get getInternalInstanceHandleFromPublicInstance() {
+    return getInternalInstanceHandleFromPublicInstance;
   },
 };
